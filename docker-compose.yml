version: '3.8'

services:
  # Redis Cache & Pub/Sub
  redis:
    image: redis:7-alpine
    container_name: helix-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - helix-network

  # PostgreSQL Database (Optional)
  postgres:
    image: postgres:15-alpine
    container_name: helix-postgres
    environment:
      POSTGRES_USER: helix_user
      POSTGRES_PASSWORD: helix_password
      POSTGRES_DB: helix_collective
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U helix_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - helix-network
    profiles:
      - postgres

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: helix-backend
    environment:
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_GUILD_ID: ${DISCORD_GUILD_ID}
      ARCHITECT_ID: ${ARCHITECT_ID}
      REDIS_URL: redis://redis:6379
      DATABASE_URL: postgresql://helix_user:helix_password@postgres:5432/helix_collective
      NOTION_API_KEY: ${NOTION_API_KEY}
      NOTION_DATABASE_ID: ${NOTION_DATABASE_ID}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DEBUG: ${DEBUG:-false}
    ports:
      - "8000:8000"
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
      - ./Helix:/app/Helix
      - ./Shadow:/app/Shadow
    networks:
      - helix-network
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  # Streamlit Frontend (Optional)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.streamlit
    container_name: helix-frontend
    environment:
      API_BASE: http://backend:8000
    ports:
      - "8501:8501"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend
    networks:
      - helix-network
    command: streamlit run frontend/streamlit_app.py --server.port=8501 --server.address=0.0.0.0
    profiles:
      - frontend

volumes:
  redis_data:
  postgres_data:

networks:
  helix-network:
    driver: bridge

